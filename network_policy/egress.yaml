apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-all-egress
spec:
  podSelector:
    matchLabels:
      name: my_pod # apply only to my_pod
  egress:
    - {}   # if empty allow all
  policyTypes:
    - Egress

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all-egress
spec:
  podSelector:
    matchLabels:
      name: my_pod # apply only to my_pod
  policyTypes:
    - Egress
  #
  #egress:  < - WITHOUT EGRESS, DENY ALL
  #  - { }  < - WITHOUT EGRESS, DENY ALL
  #

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-external-egress
  namespace: namespace-worker
spec:
  podSelector: {}  # Selects all pods in namespace-worker
  policyTypes:
    - Egress
  egress:
    # Allow egress to all pods in all namespaces
    - to:
        - namespaceSelector: {}  # All namespaces
          podSelector: {}        # All pods

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: metadata-deny
  namespace: metadata-access
spec:
  podSelector: {}
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0 # Разрешает egress только на весь интернет (0.0.0.0/0)
            except:
              - 192.168.100.21/32 # кроме 192.168.100.21/32
---


apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: metadata-allow
  namespace: metadata-access
spec:
  podSelector:
    matchLabels:
      role: metadata-accessor # Применяется только к подам с label role=metadata-accessor
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 192.168.100.21/32 # Разрешает egress к IP 192.168.100.21/32


